{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.stats import pearsonr\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>stamina</th>\n",
       "      <th>attack_value</th>\n",
       "      <th>defense_value</th>\n",
       "      <th>capture_rate</th>\n",
       "      <th>flee_rate</th>\n",
       "      <th>spawn_chance</th>\n",
       "      <th>primary_strength</th>\n",
       "      <th>combat_point</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Bulbasaur</td>\n",
       "      <td>90</td>\n",
       "      <td>126</td>\n",
       "      <td>126</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.10</td>\n",
       "      <td>69.0</td>\n",
       "      <td>Grass</td>\n",
       "      <td>1079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Ivysaur</td>\n",
       "      <td>120</td>\n",
       "      <td>156</td>\n",
       "      <td>158</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.07</td>\n",
       "      <td>4.2</td>\n",
       "      <td>Grass</td>\n",
       "      <td>1643</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Venusaur</td>\n",
       "      <td>160</td>\n",
       "      <td>198</td>\n",
       "      <td>200</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.05</td>\n",
       "      <td>1.7</td>\n",
       "      <td>Grass</td>\n",
       "      <td>2598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Charmander</td>\n",
       "      <td>78</td>\n",
       "      <td>128</td>\n",
       "      <td>108</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.10</td>\n",
       "      <td>25.3</td>\n",
       "      <td>Fire</td>\n",
       "      <td>962</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Charmeleon</td>\n",
       "      <td>116</td>\n",
       "      <td>160</td>\n",
       "      <td>140</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1.2</td>\n",
       "      <td>Fire</td>\n",
       "      <td>1568</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         name  stamina  attack_value  defense_value  capture_rate  flee_rate  \\\n",
       "0   Bulbasaur       90           126            126          0.16       0.10   \n",
       "1     Ivysaur      120           156            158          0.08       0.07   \n",
       "2    Venusaur      160           198            200          0.04       0.05   \n",
       "3  Charmander       78           128            108          0.16       0.10   \n",
       "4  Charmeleon      116           160            140          0.08       0.07   \n",
       "\n",
       "   spawn_chance primary_strength  combat_point  \n",
       "0          69.0            Grass          1079  \n",
       "1           4.2            Grass          1643  \n",
       "2           1.7            Grass          2598  \n",
       "3          25.3             Fire           962  \n",
       "4           1.2             Fire          1568  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tdata = pd.read_csv('hw2_data.csv')\n",
    "tdata.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "(ii)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: 0.583\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(tdata.combat_point,tdata.stamina,color ='blue', label = 'stamina')\n",
    "\n",
    "\n",
    "\n",
    "plt.title('Stamina vs Combat Points ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "plt.xlabel('Combat Points',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.ylabel('Stamina',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(tdata.combat_point, tdata.stamina)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: 0.908\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter( tdata.combat_point,tdata.attack_value,color ='red', label= 'attack_value')\n",
    "\n",
    "plt.title('Attack Value vs Combat Points ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "plt.xlabel('Combat Points',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.ylabel('Attack Value',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(tdata.combat_point, tdata.attack_value)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: 0.826\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(tdata.combat_point,tdata.defense_value,color ='green', label = 'defense_value')\n",
    "\n",
    "plt.title('Defense Value vs Combat Points ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "plt.xlabel('Combat Points',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.ylabel('Defense Value',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(tdata.combat_point, tdata.defense_value)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.743\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(tdata.combat_point,tdata.capture_rate,color ='pink', label = 'capture_rate')\n",
    "\n",
    "plt.title('Capture Rate vs Combat Points ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "plt.xlabel('Combat Points',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.ylabel('Capture Rate',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(tdata.combat_point, tdata.capture_rate)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.407\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(tdata.combat_point,tdata.flee_rate ,color ='purple', label = 'flee_rate')\n",
    "\n",
    "plt.title('Flee Rate vs Combat Points ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "plt.xlabel('Combat Points',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.ylabel('Flee Rate',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(tdata.combat_point, tdata.flee_rate, )\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.421\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(tdata.combat_point,tdata.spawn_chance,color ='orange', label = 'spawn_chance')\n",
    "\n",
    "\n",
    "plt.title('Spawn Chance vs Combat Points ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "plt.xlabel('Combat Points',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.ylabel('Spawn Chance',fontdict = {'fontsize' : 14, 'fontname':'Comic Sans MS'})\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(tdata.combat_point, tdata.spawn_chance)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## (iii)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: 0.303\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "S = tdata.stamina \n",
    "A = tdata.attack_value\n",
    "D = tdata.defense_value\n",
    "C = tdata.spawn_chance\n",
    "F = tdata.flee_rate\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "plt.scatter(A,S,color ='orange', label = 'spawn_chance')\n",
    "# plt.scatter(D,S,color ='blue', label = 'spawn_chance')\n",
    "# plt.scatter(C,S,color ='red', label = 'spawn_chance')\n",
    "# plt.scatter(F,S,color ='green', label = 'spawn_chance')\n",
    "\n",
    "\n",
    "\n",
    "plt.title('Attack vs Stamina ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "#plt.xticks([0,100, 200, 300, 400])\n",
    "\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(A, S)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: 0.303\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(D,S,color ='black', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Defense vs Stamina ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(D, S)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.276\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(C,S,color ='brown', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Spwan Chance vs Stamina ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(C, S)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.271\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(F,S,color ='green', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Flee vs Stamina ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(F, S)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: 0.737\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(A,D,color ='blue', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Attack Value vs Defense Value ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(A, D)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.433\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(A,C,color ='yellow', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Attack vs Spwan Chance ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "#Find Pearson's Correlation \n",
    "corr, _ = pearsonr(A, C)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.369\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(A,F,color ='red', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Attack vs Flee Rate ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(A, F)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.432\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(D,C,color ='purple', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Defense vs Chance ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(D, C)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: -0.424\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(D,F,color ='pink', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Defense vs Flee ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(F,D)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pearsons correlation: 0.293\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(C,F,color ='green', label = 'spawn_chance')\n",
    "\n",
    "plt.title('Spawn Chance vs Flee Rate ', fontdict = {'fontname':'Comic Sans MS','fontsize':15})\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# Find Pearson's Correlation \n",
    "corr, _ = pearsonr(F,C)\n",
    "print('Pearsons correlation: %.3f' % corr)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## (iv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:24: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:28: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:32: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:36: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:40: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:44: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:48: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:52: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:56: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:60: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:64: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:68: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:72: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:76: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:80: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n"
     ]
    }
   ],
   "source": [
    "#Creat the columns with init value of zero\n",
    "tdata['Grass'] = 0\n",
    "tdata['Fire'] = 0\n",
    "tdata['Water'] = 0\n",
    "tdata['Bug'] = 0\n",
    "tdata['Normal'] = 0\n",
    "tdata['Electric'] = 0\n",
    "tdata['Dragon'] = 0\n",
    "tdata['Rock'] = 0\n",
    "tdata['Poison'] = 0\n",
    "tdata['Ground'] = 0\n",
    "tdata['Fighting'] = 0\n",
    "tdata['Ghost'] = 0\n",
    "tdata['Fairy'] = 0\n",
    "tdata['Psychic'] = 0\n",
    "tdata['Ice'] = 0\n",
    "\n",
    "\n",
    "\n",
    "#Apply the one hot encoding\n",
    "\n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Grass': \n",
    "        tdata.loc[:,'Grass'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Fire': \n",
    "        tdata.loc[:,'Fire'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Water': \n",
    "        tdata.loc[:,'Water'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Bug': \n",
    "        tdata.loc[:,'Bug'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Normal': \n",
    "        tdata.loc[:,'Normal'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Electric': \n",
    "        tdata.loc[:,'Electric'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Dragon': \n",
    "        tdata.loc[:,'Dragon'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Rock': \n",
    "        tdata.loc[:,'Rock'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Poison': \n",
    "        tdata.loc[:,'Poison'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Ground': \n",
    "        tdata.loc[:,'Ground'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Fighting': \n",
    "        tdata.loc[:,'Fighting'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Ghost': \n",
    "        tdata.loc[:,'Ghost'][i] = 1 \n",
    "\n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Fairy': \n",
    "        tdata.loc[:,'Fairy'][i] = 1 \n",
    "        \n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Psychic': \n",
    "        tdata.loc[:,'Psychic'][i] = 1 \n",
    "\n",
    "for i in range(0,len(tdata.primary_strength)):\n",
    "    if tdata.loc[:,('primary_strength')][i] == 'Ice': \n",
    "        tdata['Ice'][i] = 1 \n",
    "        \n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Bais Term</th>\n",
       "      <th>stamina</th>\n",
       "      <th>attack_value</th>\n",
       "      <th>defense_value</th>\n",
       "      <th>capture_rate</th>\n",
       "      <th>flee_rate</th>\n",
       "      <th>spawn_chance</th>\n",
       "      <th>Grass</th>\n",
       "      <th>Fire</th>\n",
       "      <th>Water</th>\n",
       "      <th>...</th>\n",
       "      <th>Electric</th>\n",
       "      <th>Dragon</th>\n",
       "      <th>Rock</th>\n",
       "      <th>Poison</th>\n",
       "      <th>Ground</th>\n",
       "      <th>Fighting</th>\n",
       "      <th>Ghost</th>\n",
       "      <th>Fairy</th>\n",
       "      <th>Psychic</th>\n",
       "      <th>Ice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>90</td>\n",
       "      <td>126</td>\n",
       "      <td>126</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.10</td>\n",
       "      <td>69.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>120</td>\n",
       "      <td>156</td>\n",
       "      <td>158</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.07</td>\n",
       "      <td>4.20</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>198</td>\n",
       "      <td>200</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.05</td>\n",
       "      <td>1.70</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>78</td>\n",
       "      <td>128</td>\n",
       "      <td>108</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.10</td>\n",
       "      <td>25.30</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>116</td>\n",
       "      <td>160</td>\n",
       "      <td>140</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1.20</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>182</td>\n",
       "      <td>162</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.80</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>142</th>\n",
       "      <td>1</td>\n",
       "      <td>320</td>\n",
       "      <td>180</td>\n",
       "      <td>180</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.09</td>\n",
       "      <td>1.60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>143</th>\n",
       "      <td>1</td>\n",
       "      <td>82</td>\n",
       "      <td>128</td>\n",
       "      <td>110</td>\n",
       "      <td>0.32</td>\n",
       "      <td>0.09</td>\n",
       "      <td>30.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>144</th>\n",
       "      <td>1</td>\n",
       "      <td>122</td>\n",
       "      <td>170</td>\n",
       "      <td>152</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.06</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>1</td>\n",
       "      <td>182</td>\n",
       "      <td>250</td>\n",
       "      <td>212</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.05</td>\n",
       "      <td>0.11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>146 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Bais Term  stamina  attack_value  defense_value  capture_rate  flee_rate  \\\n",
       "0            1       90           126            126          0.16       0.10   \n",
       "1            1      120           156            158          0.08       0.07   \n",
       "2            1      160           198            200          0.04       0.05   \n",
       "3            1       78           128            108          0.16       0.10   \n",
       "4            1      116           160            140          0.08       0.07   \n",
       "..         ...      ...           ...            ...           ...        ...   \n",
       "141          1      160           182            162          0.16       0.09   \n",
       "142          1      320           180            180          0.16       0.09   \n",
       "143          1       82           128            110          0.32       0.09   \n",
       "144          1      122           170            152          0.08       0.06   \n",
       "145          1      182           250            212          0.04       0.05   \n",
       "\n",
       "     spawn_chance  Grass  Fire  Water  ...  Electric  Dragon  Rock  Poison  \\\n",
       "0           69.00      1     0      0  ...         0       0     0       0   \n",
       "1            4.20      1     0      0  ...         0       0     0       0   \n",
       "2            1.70      1     0      0  ...         0       0     0       0   \n",
       "3           25.30      0     1      0  ...         0       0     0       0   \n",
       "4            1.20      0     1      0  ...         0       0     0       0   \n",
       "..            ...    ...   ...    ...  ...       ...     ...   ...     ...   \n",
       "141          1.80      0     0      0  ...         0       0     1       0   \n",
       "142          1.60      0     0      0  ...         0       0     0       0   \n",
       "143         30.00      0     0      0  ...         0       1     0       0   \n",
       "144          2.00      0     0      0  ...         0       1     0       0   \n",
       "145          0.11      0     0      0  ...         0       1     0       0   \n",
       "\n",
       "     Ground  Fighting  Ghost  Fairy  Psychic  Ice  \n",
       "0         0         0      0      0        0    0  \n",
       "1         0         0      0      0        0    0  \n",
       "2         0         0      0      0        0    0  \n",
       "3         0         0      0      0        0    0  \n",
       "4         0         0      0      0        0    0  \n",
       "..      ...       ...    ...    ...      ...  ...  \n",
       "141       0         0      0      0        0    0  \n",
       "142       0         0      0      0        0    0  \n",
       "143       0         0      0      0        0    0  \n",
       "144       0         0      0      0        0    0  \n",
       "145       0         0      0      0        0    0  \n",
       "\n",
       "[146 rows x 22 columns]"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tdata2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (V) Implement LR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Bais Term</th>\n",
       "      <th>stamina</th>\n",
       "      <th>attack_value</th>\n",
       "      <th>defense_value</th>\n",
       "      <th>capture_rate</th>\n",
       "      <th>flee_rate</th>\n",
       "      <th>spawn_chance</th>\n",
       "      <th>Grass</th>\n",
       "      <th>Fire</th>\n",
       "      <th>Water</th>\n",
       "      <th>...</th>\n",
       "      <th>Electric</th>\n",
       "      <th>Dragon</th>\n",
       "      <th>Rock</th>\n",
       "      <th>Poison</th>\n",
       "      <th>Ground</th>\n",
       "      <th>Fighting</th>\n",
       "      <th>Ghost</th>\n",
       "      <th>Fairy</th>\n",
       "      <th>Psychic</th>\n",
       "      <th>Ice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>90</td>\n",
       "      <td>126</td>\n",
       "      <td>126</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.10</td>\n",
       "      <td>69.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>120</td>\n",
       "      <td>156</td>\n",
       "      <td>158</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.07</td>\n",
       "      <td>4.2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>160</td>\n",
       "      <td>198</td>\n",
       "      <td>200</td>\n",
       "      <td>0.04</td>\n",
       "      <td>0.05</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>78</td>\n",
       "      <td>128</td>\n",
       "      <td>108</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.10</td>\n",
       "      <td>25.3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>116</td>\n",
       "      <td>160</td>\n",
       "      <td>140</td>\n",
       "      <td>0.08</td>\n",
       "      <td>0.07</td>\n",
       "      <td>1.2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>1</td>\n",
       "      <td>120</td>\n",
       "      <td>104</td>\n",
       "      <td>140</td>\n",
       "      <td>0.40</td>\n",
       "      <td>0.10</td>\n",
       "      <td>321.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>162</td>\n",
       "      <td>196</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.06</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>1</td>\n",
       "      <td>60</td>\n",
       "      <td>116</td>\n",
       "      <td>110</td>\n",
       "      <td>0.40</td>\n",
       "      <td>0.15</td>\n",
       "      <td>212.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>1</td>\n",
       "      <td>110</td>\n",
       "      <td>178</td>\n",
       "      <td>168</td>\n",
       "      <td>0.16</td>\n",
       "      <td>0.07</td>\n",
       "      <td>6.2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>102</td>\n",
       "      <td>124</td>\n",
       "      <td>0.40</td>\n",
       "      <td>0.10</td>\n",
       "      <td>65.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Bais Term  stamina  attack_value  defense_value  capture_rate  flee_rate  \\\n",
       "0           1       90           126            126          0.16       0.10   \n",
       "1           1      120           156            158          0.08       0.07   \n",
       "2           1      160           198            200          0.04       0.05   \n",
       "3           1       78           128            108          0.16       0.10   \n",
       "4           1      116           160            140          0.08       0.07   \n",
       "..        ...      ...           ...            ...           ...        ...   \n",
       "95          1      120           104            140          0.40       0.10   \n",
       "96          1      170           162            196          0.16       0.06   \n",
       "97          1       60           116            110          0.40       0.15   \n",
       "98          1      110           178            168          0.16       0.07   \n",
       "99          1       80           102            124          0.40       0.10   \n",
       "\n",
       "    spawn_chance  Grass  Fire  Water  ...  Electric  Dragon  Rock  Poison  \\\n",
       "0           69.0      1     0      0  ...         0       0     0       0   \n",
       "1            4.2      1     0      0  ...         0       0     0       0   \n",
       "2            1.7      1     0      0  ...         0       0     0       0   \n",
       "3           25.3      0     1      0  ...         0       0     0       0   \n",
       "4            1.2      0     1      0  ...         0       0     0       0   \n",
       "..           ...    ...   ...    ...  ...       ...     ...   ...     ...   \n",
       "95         321.0      0     0      0  ...         0       0     0       0   \n",
       "96          10.0      0     0      0  ...         0       0     0       0   \n",
       "97         212.0      0     0      1  ...         0       0     0       0   \n",
       "98           6.2      0     0      1  ...         0       0     0       0   \n",
       "99          65.0      0     0      0  ...         1       0     0       0   \n",
       "\n",
       "    Ground  Fighting  Ghost  Fairy  Psychic  Ice  \n",
       "0        0         0      0      0        0    0  \n",
       "1        0         0      0      0        0    0  \n",
       "2        0         0      0      0        0    0  \n",
       "3        0         0      0      0        0    0  \n",
       "4        0         0      0      0        0    0  \n",
       "..     ...       ...    ...    ...      ...  ...  \n",
       "95       0         0      0      0        1    0  \n",
       "96       0         0      0      0        1    0  \n",
       "97       0         0      0      0        0    0  \n",
       "98       0         0      0      0        0    0  \n",
       "99       0         0      0      0        0    0  \n",
       "\n",
       "[100 rows x 22 columns]"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Keep only the numeriacal representation of the features\n",
    "tdata2 = tdata.drop(['name','primary_strength','combat_point'],axis =1)\n",
    "#Add the bias term as the first column \n",
    "tdata2['Bais Term'] = 1\n",
    "cols = list(tdata2.columns.values)\n",
    "cols.pop(cols.index('Bais Term'))\n",
    "tdata2 = tdata2[['Bais Term'] + cols]\n",
    "tdata2.head(100)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Find the ordinary least squares solution\n",
    "X = tdata2.to_numpy()\n",
    "y = tdata.combat_point\n",
    "#yn = y.to_numpy()\n",
    "\n",
    "w = np.linalg.pinv(X.transpose()@X) @ (X.transpose()@tdata.combat_point)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(22,)"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1219.0\n",
      "841.0\n",
      "1278.0\n",
      "1252.0\n",
      "1161.0\n",
      "[-1245.     4.    11.     5.   -53.   316.     0.   -97.   -91.   -61.\n",
      "     4.  -114.  -167.    19.  -128.   -54.   -27.   -55.  -228.    -3.\n",
      "  -244.     0.]\n"
     ]
    }
   ],
   "source": [
    "\n",
    "import math\n",
    "\n",
    "random_index = np.random.permutation(len(X))\n",
    "for i in range(0,5):\n",
    "    Xs = []\n",
    "    Xt = []\n",
    "    ys = []\n",
    "    yt = []    \n",
    "    for j in range(0,len(X)):\n",
    "        if (j%5 ==i):\n",
    "            Xs.append(X[random_index[j]])\n",
    "            ys.append(y[random_index[j]])\n",
    "        else: \n",
    "            Xt.append(X[random_index[j]])\n",
    "            yt.append(y[random_index[j]])\n",
    "    Xs = np.asarray(Xs)\n",
    "    Xt = np.asarray(Xt)\n",
    "    ys = np.asarray(ys)\n",
    "    yt = np.asarray(yt)\n",
    "    w_fold = np.linalg.pinv(Xt.transpose()@Xt) @ (Xt.transpose()@yt)\n",
    "    predict = Xt@w_fold.transpose()\n",
    "    #print(yt)\n",
    "    RSSList = 0\n",
    "    A = 0\n",
    "    for z in range(0,len(Xt)):\n",
    "        RSS = (yt[z] - predict[z])*(yt[z] - predict[z])\n",
    "        RSSList += RSS\n",
    "    #print(RSSt)\n",
    "    RSS_fold = math.sqrt(RSSList)\n",
    "    print(np.round(RSS_fold))\n",
    "\n",
    "\n",
    "print(np.round(w_fold))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (VI)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1332.0\n",
      "1205.0\n",
      "1224.0\n",
      "875.0\n",
      "1184.0\n",
      "[-1120.     3.    11.     5.  -171.   145.     0.   -64.   -91.   -28.\n",
      "    38.  -102.  -127.     0.  -127.   -30.   -49.   -72.  -167.   -23.\n",
      "  -183.   -94.]\n"
     ]
    }
   ],
   "source": [
    "#Regularization\n",
    "\n",
    "random_index = np.random.permutation(len(X))\n",
    "for i in range(0,5):\n",
    "    Xs = []\n",
    "    Xt = []\n",
    "    ys = []\n",
    "    yt = []    \n",
    "    r_term = 0.3\n",
    "\n",
    "    for j in range(0,len(X)):\n",
    "        if (j%5 ==i):\n",
    "            Xs.append(X[random_index[j]])\n",
    "            ys.append(y[random_index[j]])\n",
    "        else: \n",
    "            Xt.append(X[random_index[j]])\n",
    "            yt.append(y[random_index[j]])\n",
    "    Xs = np.asarray(Xs)\n",
    "    Xt = np.asarray(Xt)\n",
    "    ys = np.asarray(ys)\n",
    "    yt = np.asarray(yt)\n",
    "    w_fold = np.linalg.pinv(Xt.transpose()@Xt + r_term*np.identity(22) ) @ (Xt.transpose()@yt)\n",
    "    predict = Xt@w_fold.transpose()\n",
    "    #print(yt)\n",
    "    RSSList = 0\n",
    "    for z in range(0,len(Xt)):\n",
    "        RSS = (yt[z] - predict[z])*(yt[z] - predict[z])\n",
    "        RSSList += RSS\n",
    "    #print(RSSt)\n",
    "    RSS_fold = math.sqrt(RSSList)\n",
    "    print(np.round(RSS_fold))\n",
    "    \n",
    "print(np.round(w_fold))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (VII) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3594.0\n",
      "3684.0\n",
      "3647.0\n",
      "3579.0\n",
      "3689.0\n"
     ]
    }
   ],
   "source": [
    "# Using only two Features\n",
    "\n",
    "#Find the ordinary least squares solution\n",
    "tdata3 = tdata2[['attack_value','defense_value']]\n",
    "\n",
    "XX = tdata3.to_numpy()\n",
    "random_index = np.random.permutation(len(XX))\n",
    "for i in range(0,5):\n",
    "    XXs = []\n",
    "    XXt = []\n",
    "    ys = []\n",
    "    yt = []\n",
    "    r_term = 0\n",
    "    \n",
    "    for j in range(0,len(XX)):\n",
    "        if (j%5 ==i):\n",
    "            XXs.append(XX[random_index[j]])\n",
    "            ys.append(y[random_index[j]])\n",
    "        else: \n",
    "            XXt.append(XX[random_index[j]])\n",
    "            yt.append(y[random_index[j]])\n",
    "    XXs = np.asarray(XXs)\n",
    "    XXt = np.asarray(XXt)\n",
    "    ys = np.asarray(ys)\n",
    "    yt = np.asarray(yt)\n",
    "    \n",
    "    #print(np.linalg.pinv(Xt.transpose()@Xt))\n",
    "    w_fold2 = np.linalg.pinv(XXt.transpose()@XXt + r_term*np.identity(2) ) @ (XXt.transpose()@yt) \n",
    "    predict2 = XXt@w_fold2.transpose()\n",
    "    RSS2t = 0\n",
    "    for z in range(0,len(XXt)):\n",
    "        RSS2 = (yt[z] - predict2[z])*(yt[z] - predict2[z])\n",
    "        RSS2t += RSS2\n",
    "    #print(RSSt)\n",
    "    RSS2t2 = math.sqrt(RSS2t)\n",
    "    print(np.round(RSS2t2))\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1673.0\n",
      "2113.0\n",
      "2019.0\n",
      "2057.0\n",
      "2167.0\n"
     ]
    }
   ],
   "source": [
    "#Using four features\n",
    "tdata3 = tdata2[['stamina','attack_value','defense_value', 'capture_rate']]\n",
    "\n",
    "XX = tdata3.to_numpy()\n",
    "\n",
    "random_index = np.random.permutation(len(XX))\n",
    "for i in range(0,5):\n",
    "    XXs = []\n",
    "    XXt = []\n",
    "    ys = []\n",
    "    yt = []\n",
    "    r_term = 0.2\n",
    "    \n",
    "    for j in range(0,len(XX)):\n",
    "        if (j%5 ==i):\n",
    "            XXs.append(XX[random_index[j]])\n",
    "            ys.append(y[random_index[j]])\n",
    "        else: \n",
    "            XXt.append(XX[random_index[j]])\n",
    "            yt.append(y[random_index[j]])\n",
    "    XXs = np.asarray(XXs)\n",
    "    XXt = np.asarray(XXt)\n",
    "    ys = np.asarray(ys)\n",
    "    yt = np.asarray(yt)\n",
    "    \n",
    "    #print(np.linalg.pinv(Xt.transpose()@Xt))\n",
    "    w_fold2 = np.linalg.pinv(XXt.transpose()@XXt+ r_term*np.identity(4) ) @ (XXt.transpose()@yt) \n",
    "    predict2 = XXt@w_fold2.transpose()\n",
    "    RSS2t = 0\n",
    "    for z in range(0,len(XXt)):\n",
    "        RSS2 = (yt[z] - predict2[z])*(yt[z] - predict2[z])\n",
    "        RSS2t += RSS2\n",
    "    #print(RSSt)\n",
    "    RSS2t2 = math.sqrt(RSS2t)\n",
    "    print(np.round(RSS2t2))\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1079 1643 2598  962 1568 2620 1015 1594 2560  446  481 1465  452  488\n",
      " 1450  684 1232 2106  585 1454  691 1758  830 1779  894 2042  804 1823\n",
      "  882 1414 2502  849 1382 2492 1209 2414  837 2203  924 2192  647 1935\n",
      " 1156 1701 2510  923 1759 1036 1903  460 1176  761 1643 1117 2403  884\n",
      " 1877 1344 3005  801 1350 2523  604 1140 1826 1097 1773 2612 1125 1736\n",
      " 2548  911 2236  855 1443 2319 1526 2215 1227 2615  897 1893 1272  861\n",
      " 1849 1114 2161 1293 2621  828 2067  810 1390 2093  863 1082 2199  797\n",
      " 1836  845 1657 1107 2976 1013 1668 1503 1527 1638 1160 2266 1190 2259\n",
      "  679 1752 2057  800 1725  972 2058  944 2197 1505 2088 1728 2134 2281\n",
      " 2137 1857  264 2708 3002  926 1084 2836 2155 2662 1703 1127 2249 1112\n",
      " 2145 2180 3135  990 1760 3525]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,\n",
       "       0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n",
       "       1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0,\n",
       "       1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,\n",
       "       1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1,\n",
       "       0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0,\n",
       "       0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1])"
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ym = y.mean()\n",
    "yy = y.to_numpy()\n",
    "yb = np.where(yy>ym,1,0)\n",
    "print(yy)\n",
    "yb"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (VIII)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.97\n"
     ]
    }
   ],
   "source": [
    "#Logitic Regression using Sklearn\n",
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "\n",
    "X_train,X_test,y_train,y_test=train_test_split(X,yb,test_size=0.20, random_state=0)\n",
    "\n",
    "model = LogisticRegression(solver='lbfgs',tol=0.0001,penalty='none', max_iter=1000)\n",
    "model.fit(X_train, y_train)\n",
    "pred = model.predict(X_test)\n",
    "score = model.score(X_test, y_test)\n",
    "print(round(score,2))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### (XI)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.913\n"
     ]
    }
   ],
   "source": [
    "\n",
    "#Apply both regularization and cross validation to logistic regression \n",
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "X_train,X_test,y_train,y_test=train_test_split(X,yb,test_size=0.20,random_state=0)\n",
    "\n",
    "random_index = np.random.permutation(len(X_train))\n",
    "\n",
    "for i in range(0,5):\n",
    "    XXs = []\n",
    "    XXt = []\n",
    "    ys = []\n",
    "    yt = []\n",
    "    r_term = 0\n",
    "    \n",
    "    for j in range(0,len(X_train)):\n",
    "        if (j%5 ==i):\n",
    "            XXs.append(X_train[random_index[j]])\n",
    "            ys.append(y_train[random_index[j]])\n",
    "        else: \n",
    "            XXt.append(X_train[random_index[j]])\n",
    "            yt.append(y_train[random_index[j]])\n",
    "    XXs = np.asarray(XXs)\n",
    "    XXt = np.asarray(XXt)\n",
    "    ys = np.asarray(ys)\n",
    "    yt = np.asarray(yt)\n",
    "    \n",
    "    #print(np.linalg.pinv(Xt.transpose()@Xt))\n",
    "  \n",
    "    \n",
    "    model = LogisticRegression(solver='saga',tol=0.0001,penalty='l2',C=0.8 , max_iter=10000)\n",
    "    #C = Inverse of regularization strength; must be a positive float. Like in support vector machines, smaller values specify stronger regularization.\n",
    "    model.fit(XXt, yt)\n",
    "    pred = model.predict(XXs)\n",
    "    score = model.score(XXs, ys)\n",
    "print(round(score,3)) #prints last fold acc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.93\n"
     ]
    }
   ],
   "source": [
    "#Logitic Regression using Sklearn\n",
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "\n",
    "X_train,X_test,y_train,y_test=train_test_split(X,yb,test_size=0.20, random_state=0)\n",
    "\n",
    "model = LogisticRegression(solver='saga',tol=0.0001,penalty='l2',C=0.8, max_iter=1000)\n",
    "model.fit(X_train, y_train)\n",
    "pred = model.predict(X_test)\n",
    "score = model.score(X_test, y_test)\n",
    "print(round(score,2))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
